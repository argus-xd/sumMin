const minSum = require("./minSum");

test("[4, 0, 3, 19, 492, -10, 1]", () => {
    expect(minSum([4, 0, 3, 19, 492, -10, 1])).toBe(-10);
});
test("[1,3]", () => {
    expect(minSum([1, 3])).toBe(4);
});
test("[10, 9, 7, 6, 5, 4, 3, 1]", () => {
    expect(minSum([10, 9, 7, 6, 5, 4, 3, 1])).toBe(4);
});

test("[1, 2, 3, 4, 5, 6, 7, 8, 9]", () => {
    expect(minSum([1, 2, 3, 4, 5, 6, 7, 8, 9])).toBe(3);
});
test("[0,1, 2, 3, 4, 5, 6, 7, 8, 9]", () => {
    expect(minSum([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])).toBe(1);
});
test("[-1,0,1, 2, 3, 4, 5, 6, 7, 8, 9]", () => {
    expect(minSum([-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9])).toBe(-1);
});
test("[-43,-33,0,3,-1,0,1, 4, 5, 6, 7, 8, 9]", () => {
    expect(minSum([-43, -33, 0, 3, -1, 0, 1, 4, 5, 6, 7, 8, 9])).toBe(-76);
});
test("[-43,-33,0,3,-1,0,1, 4, 5, 6, 7, 8, -15]", () => {
    expect(minSum([-43, -33, 0, 3, -1, 0, 1, 4, 5, 6, 7, 8, 9, -15])).toBe(-76);
});

test("[0, 0, 4, 0, 3, 19, 492, -10, 1]", () => {
    expect(minSum([0, 0, 4, 0, 3, 19, 492, -10, 1])).toBe(-10);
});

test("[0, 0, 4.5, 0, 3.67, 19, 492, -10.435, 1]", () => {
    expect(minSum([0, 0, 4.5, 0, 3.67, 19, 492, -10.435, 1])).toBe(-10.435);
});

test("[1]", () => {
    expect(minSum([1])).toBe(1);
});
test("[]", () => {
    expect(minSum([])).toBe(0);
});
test("empty", () => {
    expect(minSum()).toBe(0);
});
test("123 string", () => {
    expect(minSum("123")).toBe(123);
});
